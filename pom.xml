<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2011 Roberto Tyley
  ~
  ~ This file is part of 'Agit' - an Android Git client.
  ~
  ~ Agit is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ Agit is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses />.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<version>1.25-SNAPSHOT</version>
	<groupId>com.madgag</groupId>
	<artifactId>agit-parent</artifactId>
	<packaging>pom</packaging>
	<name>Agit parent POM project</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<android.version>2.3.3</android.version>
        <maven.build.timestamp.format>yyMMdddHH</maven.build.timestamp.format>
        <!-- Apparently necessary due to http://jira.codehaus.org/browse/MRESOURCES-99 and also more readable -->
        <versionCode>${maven.build.timestamp}</versionCode>
	</properties>
    <licenses>
        <license>
            <name>GPL v3</name>
            <url>http://www.gnu.org/licenses/gpl-3.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:git@github.com:rtyley/agit.git</connection>
        <developerConnection>scm:git:git@github.com:rtyley/agit.git</developerConnection>
        <url>git@github.com:rtyley/agit.git</url>
    </scm>
	<dependencies>
		<dependency>
			<groupId>com.google.android</groupId>
			<artifactId>android</artifactId>
			<scope>provided</scope>
			<version>${android.version}</version>
		</dependency>
	</dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.madgag</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>1.0.99.0.6-UNOFFICIAL-ROBERTO-RELEASE</version>
            </dependency>
            <dependency>
                <groupId>com.google.android</groupId>
                <artifactId>android-test</artifactId>
                <version>${android.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.0</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>r09</version>
            </dependency>
            <dependency>
                <groupId>com.madgag</groupId>
                <artifactId>util-compress</artifactId>
                <version>1.27</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>1.3.RC2</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                  <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.1</version>
                    <configuration>
                      <!--
                        During release:perform, enable the "release" profile
                       -->
                      <releaseProfiles>release</releaseProfiles>
                      <goals>validate</goals>
                    </configuration>
                  </plugin>



                <plugin>
                    <groupId>com.jayway.maven.plugins.android.generation2</groupId>
                    <artifactId>maven-android-plugin</artifactId>
                    <version>3.0.0-alpha-3</version>
                    <extensions>true</extensions>
                    <configuration>
                        <jvmArguments>
                            <jvmArgument>-Xmx512m</jvmArgument>
                        </jvmArguments>
                        <sdk>
                            <platform>10</platform>
                        </sdk>
                        <emulator>
                            <avd>22</avd>
                        </emulator>
                        <zipalign>
                            <verbose>true</verbose>
                        </zipalign>
                        <deleteConflictingFiles>true</deleteConflictingFiles>
                        <undeployBeforeDeploy>true</undeployBeforeDeploy>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3.2</version>
                </plugin>
                <plugin>
                    <groupId>com.pyx4me</groupId>
                    <artifactId>proguard-maven-plugin</artifactId>
                    <version>2.0.4</version>
                    <executions>
                        <execution>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>proguard</goal>
                            </goals>
                        </execution>
                    </executions>
                    <!-- we need to override the dependency of the plugin to get a newer version of proguard -->
                    <dependencies>
                        <dependency>
                            <groupId>net.sf.proguard</groupId>
                            <artifactId>proguard</artifactId>
                            <version>4.4</version>
                            <scope>runtime</scope>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <proguardVersion>4.4</proguardVersion>
                        <maxMemory>512m</maxMemory>
                        <injar>android-classes</injar>
                        <libs>
                            <lib>${java.home}/lib/rt.jar</lib>
                        </libs>
                        <obfuscate>false</obfuscate>
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <options>
                            <option>-keepclassmembers
                                enum * { public static **[] values(); public static ** valueOf(java.lang.String);
                                }
                            </option>

                            <option>-keep class com.madgag.agit.**</option>
                            <option>-keep class com.madgag.android.blockingprompt.**</option>

                            <option>-keep public class * extends android.app.Activity</option>
                            <option>-keep public class * extends android.app.Application</option>
                            <option>-keep public class * extends android.app.Service</option>
                            <option>-keep public class * extends android.content.BroadcastReceiver</option>
                            <option>-keep public class * extends android.content.ContentProvider</option>

                            <option>-keep
                                public class * extends android.view.View { public &lt;init&gt;(android.content.Context);
                                public &lt;init&gt;(android.content.Context, android.util.AttributeSet);
                                public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);
                                public void set*(...); }
                            </option>
                            <option>-keep public class roboguice.**</option>
                            <option>-keep class com.google.inject.Binder</option>
                            <option>-keep class com.google.inject.Key</option>
                            <option>-keep class com.google.inject.Provider</option>
                            <option>-keep class com.google.inject.TypeLiteral</option>
                            <option>-keepclassmembers class * { @com.google.inject.Inject &lt;init&gt;(...); }</option>

                            <option>-keep class org.eclipse.jgit.lib.Repository</option>

                            <!-- JSch -->
                            <option>-keep class com.jcraft.jsch.jce.*</option>
                            <option>-keep class * extends com.jcraft.jsch.KeyExchange</option>
                            <option>-keep class com.jcraft.jsch.**</option> <!-- This is giving in - would rather rely on lines like the above -->
                            
                            <option>-dontskipnonpubliclibraryclasses</option>


                            <!-- you really should NOT avoid warning but it can be helpful when testing options -->
                            <option>-ignorewarnings</option>
                            <option>-verbose</option>

                            <!-- next options are necessary to decipher stack traces with retrace later,
                             relies on the map file created -->
                            <option>-renamesourcefileattribute SourceFile</option>
                            <option>-keepattributes SourceFile,LineNumberTable,*Annotation*</option>
                            
                            <option>-printmapping map.txt</option>
                            <option>-printseeds seed.txt</option>
                            
                            <option>-ignorewarnings</option>
                            <option>-dontoptimize</option>
                            <!--
                            <option>-optimizationpasses 3</option>
                             The -optimizations option disables some arithmetic simplifications that Dalvik 1.0
                             and 1.5 can't handle.
                            <option>-optimizations !code/simplification/arithmetic</option>-->
                            
                            <option>-keepclassmembers class com.google.inject.assistedinject.FactoryProvider2 { *; }</option>
                            
                            <option>-keep public class * extends junit.framework.TestCase</option>
                            <option>-keepclassmembers class * {
                                @com.google.inject.Provides *;
                                @android.test.suitebuilder.annotation.* *;
                                void test*(...);
                                }</option>
                            <option>-keepclassmembers class * extends roboguice.application.RoboApplication { *; }</option>
                            <option>-keepclassmembers class * extends android.app.Activity {
                                public void *(android.view.View);
                            }</option>
                                                                                  
                        </options>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <!-- the standard profile runs the instrumentation tests -->
            <id>standard</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>agit-test-utils</module>
                <module>agit</module>
                <module>agit-integration-tests</module>
            </modules>
        </profile>
        <profile>
            <!-- the release profile does sign, proguard, zipalign ... but does not run instrumentation tests -->
            <id>release</id>
            <!-- via this activation the profile is automatically used when the release is done with the maven release
            plugin -->
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <modules>
                <module>agit-test-utils</module>
                <module>agit</module>
            </modules>
        </profile>
    </profiles>
</project>
